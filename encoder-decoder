# Import libraries
from tkinter import *
import pybase64

# Initializes Tkinter
root = Tk()
# Sets GUI windows dimensions
root.geometry('500x300')
# Sets the window
root.resizable(0,0)
# Sets the title of the window
root.title('Message Encoder and Decoder')
# Unmodifiable text within widget
Label(root, text='ENCODE DECODE', font = 'arial 20 bold').pack()

# Variables
text = StringVar()
private_key = StringVar()
mode = StringVar()
result = StringVar()

# Functions start
# Encode
def Encode(key,message):
    enc=[]

    for i in range(len(message)):
        # Line 29 gives remainder of division between i and len(key), remainder used as index
        key_c = key[i % len(key)]
        # Line 31 gives remainder of division after message[i] and string of key_c
        enc.append(chr(ord(message[i]) + ord(key_c)) % 256)
    return pybase64.urlsafe_b64encode("".join(enc).encode()).decode()

# Decode
def Decode(key,message):
    dec = []
    message = pybase64.urlsafe_b64decode(message).decode()

    for i in range(len(message)):
        key_c = key[i % len(key)]
        dec.append(chr((256 + ord(message[i])- ord(key_c)) % 256))
        return "".join(dec)

# Set mode
def Mode():
    if(mode.get() == 'e' or 'E'):
        result.set(Encode(private_key.get(), Text.get()))
    elif(mode.get() == 'd' or 'D'):
        result.set(Decode(private_key.get(), Text.get()))
    else:
        result.set('Invalid mode')

# Exits window
def Exit():
    #Quits program using line 54
    root.destroy()

# Resets window
def reset():
    text.set('')
    private_key.set('')
    mode.set('')
    result.set('')

